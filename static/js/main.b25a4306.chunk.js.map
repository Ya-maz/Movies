{"version":3,"sources":["components/store/actions.ts","components/store/reducers/requestReducer.ts","components/store/reducers/loadingAnimationReducer.ts","components/store/reducers/movieReducer.ts","components/store/reducers/rootReducer.tsx","services.ts","components/store/saga.ts","components/UI/Input/Input.tsx","components/UI/Loader/Loader.tsx","components/UI/Cards/Poster/Poster.tsx","constant.ts","utils.ts","components/UI/Cards/GroupCards/GroupCards.tsx","components/UI/SortForm/SortForm.tsx","assets/fire.svg","components/UI/Tost/Tost.tsx","components/Pages/Home/Home.tsx","assets/giraffe.svg","components/Pages/Author/Author.tsx","components/UI/Nav/Navigation.tsx","components/UI/Cards/MainCard/MainCard.tsx","components/Pages/Movie/Movie.tsx","components/Pages/Team/Team.tsx","App.tsx","index.tsx"],"names":["GET_MOVIES_FETCH_SUCCEED","GET_MOVIE_BY_ID_FETCH_SUCCEED","SHOW_LOADING","HIDE_LOADING","SORT_DEFAULT","SORT_REVERSE","SORT_BY_YEAR","SORT_BY_YEAR_REVERSE","getMoviesFetchRequestedCreator","url","type","getMovieByIdFetchSucceedCreator","movie","payload","getMoviesFetchFailedCreator","error","initialState","data","Response","Search","Poster","Title","Type","Year","imdbID","totalResults","loading","Rated","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","Ratings","Source","Value","Metascore","imdbRating","imdbVotes","DVD","BoxOffice","Production","Website","rootReducer","combineReducers","search","state","action","concat","sort","a","b","Number","api","fetch","response","ok","Error","statusText","json","sagaWatcher","sagaWorkerSearch","sagaWorkerById","sagaWorkerSort","takeEvery","put","isLoading","call","moviesFromServer","result","message","InputLineForSearch","props","Container","className","Row","Col","InputGroup","FormControl","placeholder","value","title","onChange","inputHandler","onKeyPress","enterPressHandler","Button","variant","id","onClick","buttonHandler","Loader","Spinner","animation","Card","style","width","Img","src","Body","Text","to","URL","API_KEY","createSearchUrl","text","split","join","plusInsteadOfSpace","GroupCards","dispatch","useDispatch","useSelector","tt","Object","keys","length","map","filmInfo","i","SortForm","Form","Select","dropHandler","size","Tost","Toast","show","onClose","toggleShow","Header","Fire","alt","Home","useState","setShow","setTitle","listIsEmpry","event","target","justSortItCreator","key","Author","AuthorImg","ListGroup","ListGroupItem","Navigation","Navbar","bg","Brand","href","Nav","MainCard","margin","Movie","Team","Accordion","defaultActiveKey","Item","eventKey","Badge","App","exact","path","render","saga","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","app","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b25a4306.chunk.js","sourcesContent":["import {\r\n  typeGetMoviesFetchRequestCreator,\r\n  typeGetMoviesFetchSucceedCreator,\r\n  typeGetMovieByIDFetchSucceedCreator,\r\n  typeGetMoviesFetchFailedCreator,\r\n  typeShowLoadingCreator,\r\n  typeHideLoadingCreator,\r\n  typeGetMovieByIdFetchRequestCreator,\r\n  // typeSortDefaultCreator,\r\n  // typeSortReverseCreator,\r\n  // typeSortByYearCreator,\r\n  // typeSortByYearReverseCreator,\r\n  typePayload,\r\n  typePushPayloadToTypeCreator,\r\n  typeJustSortItCreator,\r\n} from \"./type/actionsType\";\r\n\r\nexport const GET_MOVIES_FETCH_REQUESTED = \"GET_MOVIES_FETCH_REQUESTED\";\r\nexport const GET_MOVIES_FETCH_SUCCEED = \"GET_MOVIES_FETCH_SUCCEED\";\r\nexport const GET_MOVIES_FETCH_FAILED = \"GET_MOVIES_FETCH_FAILED\";\r\nexport const GET_MOVIE_BY_ID_FETCH_REQUESTED = \"GET_MOVIE_BY_ID_FETCH_REQUESTED\";\r\nexport const GET_MOVIE_BY_ID_FETCH_SUCCEED = \"GET_MOVIE_BY_ID_FETCH_SUCCEED\";\r\nexport const SHOW_LOADING = \"SHOW_LOADING\";\r\nexport const HIDE_LOADING = \"HIDE_LOADING\";\r\n\r\nexport const SORT_DEFAULT = \"SORT/DEFAULT\";\r\nexport const SORT_REVERSE = \"SORT/REVERSE\";\r\nexport const SORT_BY_YEAR = \"SORT/BY_YEAR\";\r\nexport const SORT_BY_YEAR_REVERSE = \"SORT/BY_YEAR_REVERSE\";\r\nexport const JUST_SORT_IT = \"JUST_SORT_IT\";\r\n\r\nexport const getMoviesFetchRequestedCreator: typeGetMoviesFetchRequestCreator = (url) => ({\r\n    type: \"GET_MOVIES_FETCH_REQUESTED\",\r\n    url,\r\n  });\r\n\r\nexport const getMovieByIdFetchRequestedCreator: typeGetMovieByIdFetchRequestCreator = (url) => ({\r\n    type: \"GET_MOVIE_BY_ID_FETCH_REQUESTED\",\r\n    url,\r\n  });\r\n\r\nexport const getMoviesFetchSucceedCreator: typeGetMoviesFetchSucceedCreator = (data) => ({\r\n    type: \"GET_MOVIES_FETCH_SUCCEED\",\r\n    payload: data,\r\n  });\r\n\r\nexport const getMovieByIdFetchSucceedCreator: typeGetMovieByIDFetchSucceedCreator = (movie) => ({\r\n    type: \"GET_MOVIE_BY_ID_FETCH_SUCCEED\",\r\n    payload: movie,\r\n  });\r\n\r\nexport const getMoviesFetchFailedCreator: typeGetMoviesFetchFailedCreator = (error) => ({\r\n    type: \"GET_MOVIES_FETCH_FAILED\",\r\n    error,\r\n  });\r\n\r\nexport const showLoadingCreator: typeShowLoadingCreator = () => ({\r\n    type: \"SHOW_LOADING\",\r\n    isLoading: true,\r\n  });\r\n\r\nexport const hideLoadingCreator: typeHideLoadingCreator = () => ({\r\n    type: \"HIDE_LOADING\",\r\n    isLoading: false,\r\n  });\r\n\r\n// export const sortDefaultCreator: typeSortDefaultCreator = () => {\r\n//   return {\r\n//     type: \"SORT/DEFAULT\",\r\n//   };\r\n// };\r\n// export const sortReverseCreator: typeSortReverseCreator = () => {\r\n//   return {\r\n//     type: \"SORT/REVERSE\",\r\n//   };\r\n// };\r\n// export const sortByYearCreator: typeSortByYearCreator = () => {\r\n//   return {\r\n//     type: \"SORT/BY_YEAR\",\r\n//   };\r\n// };\r\n// export const sortByYearReverseCreator: typeSortByYearReverseCreator = () => {\r\n//   return {\r\n//     type: \"SORT/BY_YEAR_REVERSE\",\r\n//   };\r\n// };\r\n\r\nexport const justSortItCreator: typeJustSortItCreator = (value: typePayload) => ({\r\n    type: \"JUST_SORT_IT\",\r\n    payload: value,\r\n  });\r\n\r\nexport const pushPayloadToTypeCreator: typePushPayloadToTypeCreator = (payload: typePayload) => ({\r\n    type: payload,\r\n  });\r\n","import { GET_MOVIES_FETCH_SUCCEED, SORT_BY_YEAR, SORT_BY_YEAR_REVERSE, SORT_DEFAULT, SORT_REVERSE } from \"../actions\";\r\nimport { typeGetMoviesFetchSucceed, responseSearchType, typeSortDefault, typeSortReverse, typeSortByYear, typeSortByYearReverse } from \"../type/actionsType\";\r\n\r\ninterface typeInitial {\r\n  data: responseSearchType;\r\n}\r\ntype actions = typeGetMoviesFetchSucceed | typeSortDefault | typeSortReverse | typeSortByYear | typeSortByYearReverse;\r\n\r\nconst initialState: typeInitial = {\r\n  data: {\r\n    Response: \"\",\r\n    Search: [\r\n      {\r\n        Poster: \"\",\r\n        Title: \"\",\r\n        Type: \"\",\r\n        Year: \"\",\r\n        imdbID: \"\",\r\n      },\r\n    ],\r\n    totalResults: \"\",\r\n  },\r\n};\r\n\r\nexport const requestReducer = (state = initialState, action: actions): typeInitial => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_FETCH_SUCCEED:\r\n      return { ...state, data: action.payload };\r\n    case SORT_DEFAULT:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          Search: state.data.Search.concat().sort((a: { Title: string }, b: { Title: string }) => {\r\n            if (a.Title > b.Title) {\r\n              return 1;\r\n            }\r\n  \r\n            if (a.Title < b.Title) {\r\n              return -1;\r\n            }\r\n  \r\n            return 0;\r\n          }),\r\n        }\r\n      };\r\n    case SORT_REVERSE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          Search: state.data.Search.concat().sort((a: { Title: string }, b: { Title: string }) => {\r\n            if (a.Title > b.Title) {\r\n              return -1;\r\n            }\r\n\r\n            if (a.Title < b.Title) {\r\n              return 1;\r\n            }\r\n\r\n            return 0;\r\n          }),\r\n        }\r\n      };\r\n    case SORT_BY_YEAR:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          Search: state.data.Search.concat().sort(\r\n            (a: { Year: string }, b: { Year: string }) => Number(b.Year) - Number(a.Year)\r\n          ),\r\n        }\r\n      };\r\n    case SORT_BY_YEAR_REVERSE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            Search: state.data.Search.concat().sort(\r\n              (a: { Year: string }, b: { Year: string }) => Number(a.Year) - Number(b.Year)\r\n            ),\r\n        \r\n          }\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Reducer } from \"redux\";\r\nimport { SHOW_LOADING, HIDE_LOADING } from \"../actions\";\r\nimport { typeHideLoading, typeShowLoading } from \"../type/actionsType\";\r\n\r\ninterface typeInitial {\r\n  loading: boolean;\r\n}\r\n\r\ntype actions = typeHideLoading | typeShowLoading;\r\n\r\nconst initialState: typeInitial = {\r\n  loading: false,\r\n};\r\n\r\nexport const loadingAnimationReducer: Reducer<typeInitial, actions> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADING:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADING:\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Reducer } from \"redux\";\r\nimport { GET_MOVIE_BY_ID_FETCH_SUCCEED } from \"../actions\";\r\nimport { responseByIdType, typeGetMovieByIdFetchSucceed } from \"../type/actionsType\";\r\n\r\ninterface typeInitial {\r\n  movie: responseByIdType;\r\n}\r\ntype actions = typeGetMovieByIdFetchSucceed;\r\n\r\nconst initialState: typeInitial = {\r\n  movie: {\r\n    Title: \"\",\r\n    Year: \"\",\r\n    Rated: \"\",\r\n    Released: \"\",\r\n    Runtime: \"\",\r\n    Genre: \"\",\r\n    Director: \"\",\r\n    Writer: \"\",\r\n    Actors: \"\",\r\n    Plot: \"\",\r\n    Language: \"\",\r\n    Country: \"\",\r\n    Awards: \"\",\r\n    Poster: \"\",\r\n    Ratings: [\r\n      { Source: \"\", Value: \"\" },\r\n      { Source: \"\", Value: \"\" },\r\n      { Source: \"\", Value: \"\" },\r\n    ],\r\n    Metascore: \"\",\r\n    imdbRating: \"\",\r\n    imdbVotes: \"\",\r\n    imdbID: \"\",\r\n    Type: \"\",\r\n    DVD: \"\",\r\n    BoxOffice: \"\",\r\n    Production: \"\",\r\n    Website: \"\",\r\n    Response: \"\",\r\n  },\r\n};\r\n\r\nexport const movieReducer: Reducer<typeInitial, actions> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE_BY_ID_FETCH_SUCCEED:\r\n      return { ...state, movie: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { requestReducer } from \"./requestReducer\";\r\nimport { loadingAnimationReducer } from \"./loadingAnimationReducer\";\r\nimport { movieReducer } from \"./movieReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  search: requestReducer,\r\n  loading: loadingAnimationReducer,\r\n  movie: movieReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","export async function api<T>(url: string): Promise<T> {\r\n  const response = await fetch(url);\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n  return await response.json() as Promise<T>;\r\n}\r\n\r\nexport async function falseAPI(url: string) {\r\n  console.log(url);\r\n  return new Promise((r) =>\r\n    setTimeout(() => {\r\n      const result = {\r\n        Title: \"Star Wars\",\r\n        Year: \"1977\",\r\n        Rated: \"PG\",\r\n        Released: \"25 May 1977\",\r\n        Runtime: \"121 min\",\r\n        Genre: \"Action, Adventure, Fantasy\",\r\n        Director: \"George Lucas\",\r\n        Writer: \"George Lucas\",\r\n        Actors: \"Mark Hamill, Harrison Ford, Carrie Fisher\",\r\n        Plot: \"The Imperial Forces, under orders from cruel Darth Vader, hold Princess Leia hostage in their efforts to quell the rebellion against the Galactic Empire. Luke Skywalker and Han Solo, captain of the Millennium Falcon, work together with the companionable droid duo R2-D2 and C-3PO to rescue the beautiful princess, help the Rebel Alliance and restore freedom and justice to the Galaxy.\",\r\n        Language: \"English\",\r\n        Country: \"United States, United Kingdom\",\r\n        Awards: \"Won 7 Oscars. 63 wins & 29 nominations total\",\r\n        Poster:\r\n          \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\",\r\n        Ratings: [\r\n          { Source: \"Internet Movie Database\", Value: \"8.6/10\" },\r\n          { Source: \"Rotten Tomatoes\", Value: \"92%\" },\r\n          { Source: \"Metacritic\", Value: \"90/100\" },\r\n        ],\r\n        Metascore: \"90\",\r\n        imdbRating: \"8.6\",\r\n        imdbVotes: \"1,276,172\",\r\n        imdbID: \"tt0076759\",\r\n        Type: \"movie\",\r\n        DVD: \"06 Dec 2005\",\r\n        BoxOffice: \"$460,998,507\",\r\n        Production: \"Lucasfilm Ltd.\",\r\n        Website: \"N/A\",\r\n        Response: \"True\",\r\n      };\r\n      r(result);\r\n    }, 1000)\r\n  );\r\n}\r\n","import { takeEvery, put, call, ForkEffect } from \"redux-saga/effects\";\r\nimport { api } from \"../../services\";\r\nimport {\r\n  getMoviesFetchFailedCreator,\r\n  getMoviesFetchSucceedCreator,\r\n  GET_MOVIES_FETCH_REQUESTED,\r\n  showLoadingCreator,\r\n  hideLoadingCreator,\r\n  GET_MOVIE_BY_ID_FETCH_REQUESTED,\r\n  getMovieByIdFetchSucceedCreator,\r\n  JUST_SORT_IT,\r\n  pushPayloadToTypeCreator,\r\n} from \"./actions\";\r\nimport {\r\n  typeGetMoviesFetchRequest,\r\n  responseSearchType,\r\n  responseByIdType,\r\n  typeGetMovieByIdFetchRequest,\r\n  typeJustSortIt,\r\n} from \"./type/actionsType\";\r\n\r\nexport function* sagaWatcher(): Generator<ForkEffect<never>> {\r\n  yield takeEvery(GET_MOVIES_FETCH_REQUESTED, sagaWorkerSearch);\r\n  yield takeEvery(GET_MOVIE_BY_ID_FETCH_REQUESTED, sagaWorkerById);\r\n  yield takeEvery(JUST_SORT_IT, sagaWorkerSort);\r\n}\r\n\r\nfunction* sagaWorkerSearch(action: typeGetMoviesFetchRequest) {\r\n  try {\r\n    yield put(showLoadingCreator());\r\n    const moviesFromServer: responseSearchType = yield call(api, action.url);\r\n    yield put(getMoviesFetchSucceedCreator(moviesFromServer));\r\n    yield put(hideLoadingCreator());\r\n  } catch (error) {\r\n    const result = (error as Error).message;\r\n    yield put(getMoviesFetchFailedCreator(result));\r\n  }\r\n}\r\n\r\nfunction* sagaWorkerById(action: typeGetMovieByIdFetchRequest) {\r\n  try {\r\n    yield put(showLoadingCreator());\r\n    const movie: responseByIdType = yield call(api, action.url);\r\n    yield put(getMovieByIdFetchSucceedCreator(movie));\r\n    yield put(hideLoadingCreator());\r\n  } catch (error) {\r\n    const result = (error as Error).message;\r\n    yield put(getMoviesFetchFailedCreator(result));\r\n  }\r\n}\r\n\r\nfunction* sagaWorkerSort(action: typeJustSortIt) {\r\n  try {\r\n    yield put(pushPayloadToTypeCreator(action.payload));\r\n  } catch (error) {\r\n    const result = (error as Error).message;\r\n    yield put(getMoviesFetchFailedCreator(result));\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Col, Row, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Input.css\";\r\n\r\ninterface InputLineForSearchProps {\r\n  inputHandler(event: React.ChangeEvent<HTMLInputElement>): void;\r\n  title: string;\r\n  enterPressHandler(event: React.KeyboardEvent): void;\r\n  buttonHandler(): void;\r\n}\r\n\r\nconst InputLineForSearch: React.FC<InputLineForSearchProps> = (props) => (\r\n    <Container className=\"p-3 mt-4 px800\">\r\n      <Row>\r\n        <Col>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder=\"Find your favorite movie\"\r\n              aria-label=\"SearchMovie\"\r\n              aria-describedby=\"basic-addon1\"\r\n              value={props.title}\r\n              onChange={props.inputHandler}\r\n              onKeyPress={props.enterPressHandler}\r\n            />\r\n            <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={props.buttonHandler}>\r\n              Search\r\n            </Button>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\nexport default InputLineForSearch;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader: React.FC = () => <Spinner animation=\"grow\" variant=\"info\" />;\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n// import { RootState } from \"../../../store/reducers/rootReducer\";\r\n// import { responseSearchType, Search } from \"../../../store/type/actionsType\";\r\n\r\ninterface PropsType {\r\n  Poster: string;\r\n  Title: string;\r\n  Type: string;\r\n  Year: string;\r\n  imdbID: string;\r\n  buttonHandler(tt: string): void;\r\n}\r\n\r\nconst Poster: React.FC<PropsType> = (props) => (\r\n    <Card style={{ width: \"14rem\" }}>\r\n      <Card.Img variant=\"top\" src={props.Poster} />\r\n      <Card.Body>\r\n        <Card.Title>{props.Title}</Card.Title>\r\n        <Card.Text>\r\n          {props.Year}, {props.Type}\r\n        </Card.Text>\r\n          <LinkContainer to=\"/movie\">\r\n            <Button onClick={() => props.buttonHandler(props.imdbID)}>Movie</Button>\r\n          </LinkContainer>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\nexport default Poster;\r\n","export const URL = \"http://www.omdbapi.com/\";\r\n// export const URL_FULL_DATA: string = \"http://www.omdbapi.com/\";\r\n\r\nexport const API_KEY = \"&apikey=342c4fd5\";\r\n","import { URL, API_KEY } from \"./constant\";\r\n\r\nconst plusInsteadOfSpace = (text: string) => text.split(\" \").join(\"+\");\r\nexport const createSearchUrl = (text: string) => `${URL}?s=${plusInsteadOfSpace(text)}${API_KEY}`;\r\n\r\nexport const createTitleUrl = (text: string) => `${URL}?i=${text}${API_KEY}`;\r\n","import React from \"react\";\r\nimport { useSelector , useDispatch } from \"react-redux\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport { RootState } from \"../../../store/reducers/rootReducer\";\r\nimport { Search } from \"../../../store/type/actionsType\";\r\n\r\nimport Poster from \"../Poster/Poster\";\r\nimport \"./GroupCard.css\";\r\nimport { createTitleUrl } from \"../../../../utils\";\r\nimport { getMovieByIdFetchRequestedCreator } from \"../../../store/actions\";\r\n\r\nconst GroupCards: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state: RootState) => state.search.data.Search);\r\n  const isLoading = useSelector((state: RootState) => state.loading.loading);\r\n  const buttonHandler = (tt: string): void => {\r\n    dispatch(getMovieByIdFetchRequestedCreator(createTitleUrl(tt)));\r\n  };\r\n  return (\r\n    <div className=\"group\">\r\n      {isLoading ? <Loader /> : null}\r\n      {Object.keys(data).length === 0 ? (\r\n        <h1>Here is empty</h1>\r\n      ) : (\r\n        data.map((filmInfo: Search, i: number) => <Poster key={i} {...filmInfo} buttonHandler={buttonHandler} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupCards;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { SORT_BY_YEAR, SORT_BY_YEAR_REVERSE, SORT_DEFAULT, SORT_REVERSE } from \"../../store/actions\";\r\n\r\ninterface PropsType {\r\n  dropHandler(event: React.ChangeEvent<HTMLSelectElement>): void;\r\n}\r\n\r\nconst SortForm: React.FC<PropsType> = (props) => (\r\n    <Form>\r\n      <Form.Select onChange={props.dropHandler} size=\"sm\" aria-label=\"Floating label select example\">\r\n        <option>Sort by</option>\r\n        <option value={SORT_DEFAULT}>A-Z</option>\r\n        <option value={SORT_REVERSE}>Z-A</option>\r\n        <option value={SORT_BY_YEAR}>New first</option>\r\n        <option value={SORT_BY_YEAR_REVERSE}>Old first</option>\r\n      </Form.Select>\r\n    </Form>\r\n  );\r\n\r\nexport default SortForm;\r\n","export default __webpack_public_path__ + \"static/media/fire.460e3e58.svg\";","import React from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport  Fire  from './../../../assets/fire.svg';\r\nimport './Tost.css';\r\n\r\ninterface typeProps {\r\n  show: boolean;\r\n  toggleShow():void;\r\n}\r\nconst Tost: React.FC<typeProps> = (props) => (\r\n  <Toast className='toast' show={props.show} onClose={props.toggleShow}>\r\n          <Toast.Header>\r\n      <img\r\n        src={ Fire }\r\n              className=\"rounded me-2 img\"\r\n              alt=\"img\"\r\n            />\r\n            <strong className=\"me-auto\">Oops, the site is going down soon!</strong>\r\n            <small>1 min ago</small>\r\n          </Toast.Header>\r\n          <Toast.Body>Hurry up! Нерасторопный</Toast.Body>\r\n        </Toast>\r\n  );\r\n\r\nexport default Tost;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InputLineForSearch from \"../../UI/Input/Input\";\r\nimport GroupCards from \"../../UI/Cards/GroupCards/GroupCards\";\r\nimport { getMoviesFetchRequestedCreator, justSortItCreator } from \"../../store/actions\";\r\nimport { createSearchUrl } from \"../../../utils\";\r\nimport \"./Home.css\";\r\nimport SortForm from \"../../UI/SortForm/SortForm\";\r\nimport { RootState } from \"../../store/reducers/rootReducer\";\r\nimport { typePayload } from \"../../store/type/actionsType\";\r\nimport Tost from \"../../UI/Tost/Tost\";\r\n\r\nconst Home: React.FC = () => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  const toggleShow = () => setShow(!show);\r\n\r\n\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const dispatch = useDispatch();\r\n  const listIsEmpry = useSelector((state: RootState) => state.search.data.totalResults);\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const enterPressHandler = (event: React.KeyboardEvent): void => {\r\n    if (event.key === \"Enter\") {\r\n      dispatch(getMoviesFetchRequestedCreator(createSearchUrl(title)));\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  const buttonHandler = (): void => {\r\n    dispatch(getMoviesFetchRequestedCreator(createSearchUrl(title)));\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const dropHandler = (event: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    dispatch(justSortItCreator(value as typePayload));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"form\">\r\n        <SortForm dropHandler={dropHandler} />\r\n      </div>\r\n      <InputLineForSearch\r\n        inputHandler={inputHandler}\r\n        title={title}\r\n        enterPressHandler={enterPressHandler}\r\n        buttonHandler={buttonHandler}\r\n      />\r\n      {Number(listIsEmpry) ? <GroupCards /> : <Tost show={show} toggleShow={ toggleShow}/>}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/giraffe.49a2fdfd.svg\";","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport AuthorImg from \"../../../assets/giraffe.svg\";\r\nimport \"./Author.css\";\r\n\r\nconst Author: React.FC = () => {\r\n  const state = {\r\n    title: \"Hello every body\",\r\n    plot: \"My name is Almaz. I am from Kazan. It is site my study project, so there may be something broken here\",\r\n    learning: [\"Learning Javascript\", \"Learning React\", \"Learning Typescript\"],\r\n  };\r\n  return (\r\n    <Card className=\"card\">\r\n      <Card.Img variant=\"top\" src={AuthorImg} alt=\"img\" className=\"image\" />\r\n      <Card.Body>\r\n        <Card.Title>{state.title}</Card.Title>\r\n        <Card.Text>{state.plot}</Card.Text>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        <ListGroupItem>{state.learning[0]}</ListGroupItem>\r\n        <ListGroupItem>{state.learning[1]}</ListGroupItem>\r\n        <ListGroupItem>{state.learning[2]}</ListGroupItem>\r\n      </ListGroup>\r\n      <Card.Body>\r\n        <LinkContainer to=\"/\">\r\n          <Button className=\"button\">Home</Button>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/team\">\r\n          <Button className=\"button\">Team</Button>\r\n        </LinkContainer>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default Author;\r\n","import React from \"react\";\r\nimport { Navbar, Container, Nav, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Navigation: React.FC = () => (\r\n    <Navbar bg=\"info\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">Movies</Navbar.Brand>\r\n        <Nav className=\"justify-content-end\">\r\n            <LinkContainer to=\"/author\">\r\n              <Button className='m-1'>Author</Button>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/team\">\r\n              <Button className='m-1'>Team</Button>\r\n            </LinkContainer>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Button, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { responseByIdType } from \"../../../store/type/actionsType\";\r\n\r\nconst MainCard: React.FC<responseByIdType> = (props) => (\r\n    <Card\r\n      style={{\r\n        width: \"40rem\",\r\n        margin: \"50px auto\",\r\n      }}\r\n    >\r\n      <Card.Img\r\n        variant=\"top\"\r\n        style={{\r\n          width: \"10rem\",\r\n          margin: \"15px\",\r\n        }}\r\n        src={props.Poster}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>\r\n          {props.Title}, {props.Year}, {props.Type}\r\n        </Card.Title>\r\n        <Card.Text>{props.Plot}</Card.Text>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        <ListGroupItem>Rated: {props.Rated}</ListGroupItem>\r\n        <ListGroupItem>Runtime: {props.Runtime}</ListGroupItem>\r\n        <ListGroupItem>Actor: {props.Actors}</ListGroupItem>\r\n        <ListGroupItem>Awards: {props.Awards}</ListGroupItem>\r\n        <ListGroupItem>imdbRating {props.imdbRating}</ListGroupItem>\r\n        <ListGroupItem>Director: {props.Director}</ListGroupItem>\r\n        <ListGroupItem>Writer: {props.Writer}</ListGroupItem>\r\n      </ListGroup>\r\n      <Card.Body>\r\n          <LinkContainer to=\"/\">\r\n            <Button>Home</Button>\r\n          </LinkContainer>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\nexport default MainCard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/reducers/rootReducer\";\r\nimport MainCard from \"../../UI/Cards/MainCard/MainCard\";\r\n// import MainCard from \"../../UI/Cards/MainCard/MainCard\";\r\n\r\nconst Movie: React.FC = () => {\r\n  const movie = useSelector((state: RootState) => state.movie.movie);\r\n  return <MainCard {...movie} />;\r\n};\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Accordion, Badge } from \"react-bootstrap\";\r\nimport \"./Team.css\";\r\n\r\nconst Team: React.FC = () => (\r\n    <Accordion defaultActiveKey=\"0\" className=\"team\">\r\n      <Accordion.Item eventKey=\"0\">\r\n        <Accordion.Header className=\"header\">\r\n          <h4>\r\n            <Badge bg=\"secondary\">Our dream team</Badge>\r\n          </h4>\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n          est laborum.\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n      <Accordion.Item eventKey=\"1\">\r\n        <Accordion.Header className=\"header\">\r\n          <h6>\r\n            <Badge bg=\"secondary\">Aragorn</Badge>\r\n          </h6>\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n          est laborum.\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n      <Accordion.Item eventKey=\"2\">\r\n        <Accordion.Header className=\"header\">\r\n          <h6>\r\n            <Badge bg=\"secondary\">Legolas</Badge>\r\n          </h6>\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n          est laborum.\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n      <Accordion.Item eventKey=\"3\">\r\n        <Accordion.Header className=\"header\">\r\n          <h6>\r\n            <Badge bg=\"secondary\">Gimli</Badge>\r\n          </h6>\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n          est laborum.\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    </Accordion>\r\n  );\r\nexport default Team;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../src/components/Pages/Home/Home\";\r\nimport Author from \"../src/components/Pages/Author/Author\";\r\nimport Navigation from \"./components/UI/Nav/Navigation\";\r\nimport Movie from \"./components/Pages/Movie/Movie\";\r\nimport Team from \"./components/Pages/Team/Team\";\r\n\r\nconst App: React.FC = () => (\r\n  <div>\r\n      <Navigation />\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\" render={() => <Home />} />\r\n        <Route exact={true} path=\"/author\" render={() => <Author />} />\r\n        <Route exact={true} path=\"/team\" render={() => <Team />} />\r\n        <Route exact={true} path=\"/movie\" render={() => <Movie />} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"./components/store/reducers/rootReducer\";\r\nimport { sagaWatcher } from \"./components/store/saga\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst saga = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(saga)));\r\n\r\nsaga.run(sagaWatcher);\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}